map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}
 
upstream websocket {
  server ${API_WS_HOST};
}

server {
  listen ${NGINX_PORT};
  server_name ${NGINX_HOST};

  add_header 'Access-Control-Allow-Origin' "$http_origin";
  add_header 'Access-Control-Allow-Credentials' 'true';
  add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
  add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';

  # Handle pre-flight requests
  if ($request_method = OPTIONS) {
    return 204;
  }

  location /error/ {
    root /www;

    autoindex on;
    autoindex_format json;
  }

  location /processing/ {
    root /www;

    autoindex on;
    autoindex_format json;
  }

  location / {
    root /www/data;

    autoindex        on;
    autoindex_format json;

    sendfile   on;
    tcp_nopush on;

    tcp_nodelay       on;
    keepalive_timeout 65;

    gzip             on;
    gzip_comp_level  2;
    gzip_min_length  1000;

    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain text/json text/css application/json;
  }

  location /api/tail/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Prefix /api;
    proxy_set_header X-Forwarded-Host ${NGINX_HOST};
    proxy_pass http://websocket/tail/;
  }

  location /api/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Prefix /api;
    proxy_set_header X-Forwarded-Host ${NGINX_HOST};
    proxy_set_header X-Forwarded-Proto https;
    proxy_pass ${API_URL};
  }
}
